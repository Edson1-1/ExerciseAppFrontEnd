[{"/Users/edson/Desktop/exerciseApp/frontend/src/Components/MainComponent/main.js":"1","/Users/edson/Desktop/exerciseApp/frontend/src/Components/EquipmentComponent/Equipment.js":"2","/Users/edson/Desktop/exerciseApp/frontend/src/App.js":"3","/Users/edson/Desktop/exerciseApp/frontend/src/Components/404pageComponent/Error404.js":"4","/Users/edson/Desktop/exerciseApp/frontend/src/Components/sadFace.js":"5","/Users/edson/Desktop/exerciseApp/frontend/src/reportWebVitals.js":"6","/Users/edson/Desktop/exerciseApp/frontend/src/Components/registerComponent/register.js":"7","/Users/edson/Desktop/exerciseApp/frontend/src/Components/AddorUpdateExerciseComponent/AddExercise.js":"8","/Users/edson/Desktop/exerciseApp/frontend/src/index.js":"9","/Users/edson/Desktop/exerciseApp/frontend/src/Components/loginComponent/login.js":"10","/Users/edson/Desktop/exerciseApp/frontend/src/Components/AddorUpdateEquipmentComponent/AddEquipment.js":"11","/Users/edson/Desktop/exerciseApp/frontend/src/Components/ExerciseComponent/Exercise.js":"12","/Users/edson/Desktop/exerciseApp/frontend/src/Components/UserComponent/user.js":"13","/Users/edson/Desktop/exerciseApp/frontend/src/Components/clientComponent/Client.js":"14","/Users/edson/Desktop/exerciseApp/frontend/src/Components/ProtectedRouteComponent/ProtectedRouteComponent.js":"15"},{"size":600,"mtime":1606758686277,"results":"16","hashOfConfig":"17"},{"size":3540,"mtime":1606833387138,"results":"18","hashOfConfig":"17"},{"size":3142,"mtime":1606833647562,"results":"19","hashOfConfig":"17"},{"size":686,"mtime":1606818498539,"results":"20","hashOfConfig":"17"},{"size":751,"mtime":1606817378240,"results":"21","hashOfConfig":"17"},{"size":362,"mtime":1606193750961,"results":"22","hashOfConfig":"17"},{"size":5709,"mtime":1606833198953,"results":"23","hashOfConfig":"17"},{"size":10244,"mtime":1606818260843,"results":"24","hashOfConfig":"17"},{"size":576,"mtime":1606316301252,"results":"25","hashOfConfig":"17"},{"size":5483,"mtime":1606833188812,"results":"26","hashOfConfig":"17"},{"size":3755,"mtime":1606819054843,"results":"27","hashOfConfig":"17"},{"size":3879,"mtime":1606721387933,"results":"28","hashOfConfig":"17"},{"size":5368,"mtime":1606758800492,"results":"29","hashOfConfig":"17"},{"size":294,"mtime":1606822603462,"results":"30","hashOfConfig":"17"},{"size":532,"mtime":1606372161884,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"t5q5uf",{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"40"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/edson/Desktop/exerciseApp/frontend/src/Components/MainComponent/main.js",[],"/Users/edson/Desktop/exerciseApp/frontend/src/Components/EquipmentComponent/Equipment.js",[],"/Users/edson/Desktop/exerciseApp/frontend/src/App.js",[],"/Users/edson/Desktop/exerciseApp/frontend/src/Components/404pageComponent/Error404.js",[],["66","67"],"/Users/edson/Desktop/exerciseApp/frontend/src/Components/sadFace.js",[],"/Users/edson/Desktop/exerciseApp/frontend/src/reportWebVitals.js",[],"/Users/edson/Desktop/exerciseApp/frontend/src/Components/registerComponent/register.js",[],"/Users/edson/Desktop/exerciseApp/frontend/src/Components/AddorUpdateExerciseComponent/AddExercise.js",[],"/Users/edson/Desktop/exerciseApp/frontend/src/index.js",[],["68","69"],"/Users/edson/Desktop/exerciseApp/frontend/src/Components/loginComponent/login.js",[],"/Users/edson/Desktop/exerciseApp/frontend/src/Components/AddorUpdateEquipmentComponent/AddEquipment.js",[],["70","71"],"/Users/edson/Desktop/exerciseApp/frontend/src/Components/ExerciseComponent/Exercise.js",[],"/Users/edson/Desktop/exerciseApp/frontend/src/Components/UserComponent/user.js",["72"],"import Axios from 'axios'\nimport React, { Component,useState,useEffect } from 'react'\nimport config from '../../config'\nimport { Link } from 'react-router-dom'\nimport './user.css'\n\n\n\n\n//render exercise table items\nconst RenderCustomer = (props) => {\n    const [trainer, setTrainer] = useState('hi');\n    useEffect( () => {\n        (props.trainers.length !== 0 )? setTrainer(props.trainers[0].username) : setTrainer('');\n    }, [props])\n\n    const onChangeTrainer = (e) => {\n        setTrainer(e.target.value)\n    }\n\n    return (\n        <tr>\n            <th scope=\"row\">{props.index + 1}</th>\n            <td>{props.customer.username.toUpperCase()}</td>\n            <td>{props.customer.email.toLowerCase()}</td>\n            {props.customer.trainers ? \n            <td>{props.customer.trainers.username.toUpperCase()}</td> \n            :\n             <td></td> }\n            <td> \n                <select className = 'btn btn-outline-dark' onChange = {onChangeTrainer}> \n                    {props.trainers.map( trainer => {\n                        return (<option key = {trainer.id}>\n                            {trainer.username}\n                        </option>)\n                    })}\n                </select>\n                <button className= \" btn btn-outline-dark btn-sm button-margin\" onClick = {(e) => {\n                    e.preventDefault()\n                    const trn =  props.trainers.find( trnr => trnr.username === trainer)\n                    props.assignTrainer(trn.id, props.customer.id)}}>assign</button>\n            </td>\n            <td><button className = 'btn btn-outline-danger' onClick = { (e) => {\n                props.assignTrainer(null, props.customer.id)\n            }}>unassign</button></td>\n        </tr>\n    )\n}\n\n\n\n// Exercise component\nexport default class User extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            customers: [],\n            trainers: [],\n            errorMessage: ''\n        }\n        // this.onDelete = this.onDelete.bind(this)\n        this.assignTrainer = this.assignTrainer.bind(this)\n\n    }\n\n    async componentDidMount() {\n        const token = localStorage.getItem('token')\n        this.setState({errorMessage: ''})\n        //get customers and trainers\n        try {\n            const data = await Axios.get(config.base_url + 'admin/api/user/customers', {headers: {Authorization: 'Bearer ' + token}})\n            this.setState({\n                customers: data.data\n            })\n            const trainers = await Axios.get(config.base_url+'admin/api/user/fetchtrainers', {headers: {Authorization: 'Bearer ' + token}})\n            this.setState({\n                trainers: trainers.data\n            })\n        } catch (err) {\n            console.log(err)\n            if(err.response){\n                this.setState({\n                    errorMessage: err.response.data+''\n                })\n            }else{\n                this.setState({\n                    errorMessage: err\n                })\n            }\n        }\n    }\n\n    async assignTrainer(trainerId, customerId){\n        const token = localStorage.getItem('token')\n        try{\n            console.log(trainerId, \"--\", customerId)\n            const data = await Axios.put(config.base_url+'admin/api/user/addtrainer/'+customerId, {trainer: trainerId},{headers: {Authorization: 'Bearer ' + token}} )\n            const updatedCustomer = this.state.customers.map( customer => {\n                if(customer.id === customerId){\n                    customer.trainers = data.data.trainers\n                }\n                return customer\n            })\n            this.setState({\n                customers: updatedCustomer\n            })\n\n            \n        }catch(err){\n            console.log(err)\n            if(err.response){\n                console.log(err.response.data+'')\n                this.setState({errorMessage: err.response.data+\"\"})\n            }\n        }\n\n\n    }\n\n    customerList() {\n        return (this.state.customers.sort((a, b) => { return a.id - b.id }).map((customer, index) => {\n            return <RenderCustomer assignTrainer ={this.assignTrainer} trainers = {this.state.trainers} customer={customer} index={index} key={customer.id} />\n        }))\n    }\n\n    render() {\n        return (\n            <div className = \"exercise-container\">\n                <h1 className = \"exercise-header\">Customers</h1>\n                <p className = 'error-message'>{this.state.errorMessage}</p>\n                <div className = 'table-div'>\n                    <table className='table table-body'>\n                        <thead>\n                            <tr className = 'table-text-color'>\n                                <th scope=\"col\">Sl.No</th>\n                                <th scope=\"col\">Customer Name</th>\n                                <th scope=\"col\">Email</th>\n                                <th scope=\"col\">Trainer</th>\n                                <th scope=\"col\">Assign Trainer</th>\n                                <th scope=\"col\">Unassign Trainer</th>\n                            </tr>\n                        </thead>\n                        <tbody className = \"table-text-color\">\n                            {this.customerList()}\n                        </tbody>\n                    </table>\n\n                </div>\n            </div>\n        )\n    }\n\n}","/Users/edson/Desktop/exerciseApp/frontend/src/Components/clientComponent/Client.js",[],"/Users/edson/Desktop/exerciseApp/frontend/src/Components/ProtectedRouteComponent/ProtectedRouteComponent.js",[],{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","replacedBy":"76"},{"ruleId":"73","replacedBy":"77"},{"ruleId":"75","replacedBy":"78"},{"ruleId":"73","replacedBy":"79"},{"ruleId":"75","replacedBy":"80"},{"ruleId":"81","severity":1,"message":"82","line":4,"column":10,"nodeType":"83","messageId":"84","endLine":4,"endColumn":14},"no-native-reassign",["85"],"no-negated-in-lhs",["86"],["85"],["86"],["85"],["86"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]